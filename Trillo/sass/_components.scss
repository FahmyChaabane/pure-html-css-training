///////////////////////////////
// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

///////////////////////////////
// SEARCH
.search {
  flex: 0 0 40%;
  display: flex;
  justify-content: center;
  align-items: center;

  &_input {
    font-family: inherit;
    font-size: inherit; // this is gonna inherit the font-size defined in the parent (header) and not the root
    color: inherit;
    border: none;
    background-color: var(--color-grey-light-2);
    padding: 0.7rem 2rem;
    border-radius: 10rem;
    width: 90%;
    margin-right: -3.25rem;
    transition: all 0.4s;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }
  }

  &_input:focus + &_button {
    background-color: var(--color-grey-light-3);
  }

  &::-webkit-input-placeholder {
    font-weight: 100;
    color: var(--color-grey-light-4);
  }

  &_button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }
    &:active {
      transform: translateY(0.1rem);
    }
  }

  &_icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3); // to color SVG
  }
}

///////////////////////////////
// USER NAVIGATION
.user_nav {
  align-self: stretch; // to make it fill the entire container // to override the "align-items: center" in the parent (in header) flex

  display: flex;
  align-items: center; // seem to be useless

  & > * {
    // all direct children elements
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    display: flex;
    align-items: center;

    &:hover {
      // we could get this out by one level and do: & > *:hover { // }
      background-color: var(--color-grey-light-2);
    }
  }

  &_icon-box {
    position: relative;
  }
  &_icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &_notification {
    font-size: 0.9rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;

    position: absolute;
    top: 1.5rem;
    left: 3.5rem;

    //text-align: center; instead of using this to center, we use flexbox
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &_user {
    &-photo {
      height: 3.75rem;
      border-radius: 50%;
      margin-right: 1rem;
    }
    // &-name { we ain't gonna need this
    // }
  }
}

///////////////////////////////
// SIDE NAVIGATION
.side-nav {
  //align-self: stretch;
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex;
    margin: 0;
  }

  &_item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;

      @media only screen and (max-width: $bp-medium) {
        margin-bottom: 0;
      }
    }

    @media only screen and (max-width: $bp-medium) {
      flex: 1;
    }
  }

  &_item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0.3rem;
    transform: scaleY(0);
    background-color: var(--color-primary);
    transition: transform 0.3s, width 0.2s 0.3s, background-color 0.2s;
  }

  &_item:hover::before,
  &_item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &_item:active::before {
    background-color: var(--color-primary-light);
  }

  &_link {
    &:link,
    &:visited {
      color: var(--color-grey-light-1);
      text-decoration: none;
      text-transform: uppercase;
      padding: 1.5rem 3rem;

      position: relative; // just to be able to adjust the z-index
      z-index: 1;

      display: flex;
      align-items: center;

      @media only screen and (max-width: $bp-medium) {
        justify-content: center;
      }
    }
  }

  &_icon {
    width: 1.75rem;
    height: 1.75rem;
    fill: currentColor; // current color or color of parent // var(--color-grey-light-1); // awesome behaviour when we apply hover on link
    margin-right: 2rem;
  }
}

///////////////////////////////
// LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  align-self: flex-end;

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}

///////////////////////////////
// GALLERY
.gallery {
  display: flex;

  &_photo {
    width: 100%;
    display: block; // get rid of that funky weird red thing appear below the photos
  }
}

///////////////////////////////
// OVERVIEW
.overview {
  background-color: #fff;
  border-bottom: var(--line);
  display: flex;
  align-items: center;

  &_heading {
    font-size: 2.25rem;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    padding: 1.5rem 3rem;
  }

  &_stars {
    margin-right: auto; //pull the rest until their limits ^|_||_|*           |___||_||_|$ // au lieu de faire justify etc..
    //flex: 1;

    display: flex; // in order to get rid of that tiny white space under svg's
  }

  &_icon-star,
  &_icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &_location {
    font-size: 1.2rem;

    display: flex;
    align-items: center;
  }

  &_icon-location {
    margin-right: 0.5rem;
  }

  &_rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;

    align-self: stretch;
    padding: 0 2.25rem;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    &-average {
      font-size: 2.5rem;
      font-weight: 300;
      text-align: center;
      margin-bottom: -0.3rem;
    }

    &-count {
      font-size: 0.9rem;
      text-transform: uppercase;
    }
  }
}

///////////////////////////////
// BUTTON INLINE
.button-inline {
  cursor: pointer;
  border: none;
  background-color: transparent;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  padding-bottom: 0.2rem;

  transition: all 0.4s;

  span {
    margin-left: 0.3rem;
    transition: margin-left 0.2s;
  }

  &:hover {
    // in general
    color: var(--color-grey-dark-1);
    animation: pulsate 1s infinite;

    span {
      // to the span element
      margin-left: 0.8rem;
    }
  }

  &:focus {
    outline: none; // get rid of that default blue border
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

///////////////////////////////
// PARAGRAPH
.paragraph {
  &:not(:last-of-type) {
    // last child won't work cuz it applies for all children inside and element and paragprph isn't the last
    margin-bottom: 2rem;
  }
}

///////////////////////////////
// LIST
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;

  position: relative;

  &-item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }

  &-item::before {
    // an other approach to incluse the svg
    content: "";

    display: inline-block;
    width: 1rem;
    height: 1rem;
    margin-right: 0.7rem;

    // old browsers
    //background-image: url("../img/chevron-thin-right.svg");

    // newer browsers - mask // define an area where we can look thro an element and see what behind the element
    background-color: var(--color-primary);
    -webkit-mask-image: url("../img/chevron-thin-right.svg");
    -webkit-mask-size: cover;
    mask-image: url("../img/chevron-thin-right.svg");
    mask-size: cover;
  }
}

///////////////////////////////
// RECOMMEND
.recommend {
  font-size: 1.3rem;
  //color: var(--color-grey-dark-3);

  display: flex;
  align-items: center;
  //justify-content: space-between; (999)

  &-count {
    margin-right: auto; // (999) similar to espacing the star elemnt from the other.
  }

  // &-friends { ain't need it for now
  // }

  &-friends {
    //when discorvering media queries needs
    display: flex; // by this, when shrinking, the photos always stays together.
  }

  &-photo {
    width: 4rem;
    height: 4rem;

    box-sizing: content-box; // which is the default
    border-radius: 50%;
    border: 0.3rem solid #fff;

    &:not(:last-of-type) {
      margin-right: -2rem;
    }
  }
}

////////////////////////////////////////////
//// REVIEW
.review {
  padding: 3rem;
  margin-bottom: 3.5rem;
  background-color: #fff;
  //border-radius: 0.4rem;
  box-shadow: var(--shadow-light);

  position: relative;
  overflow: hidden; // so that whats inside, doesn't get out of the parent box

  &-text {
    margin-bottom: 2rem;

    position: relative; // same as before, to be able to use zindex
    z-index: 10; //(1994)
  }

  &-photo {
    width: 4.5rem;
    height: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }

  &-user {
    display: flex;
    align-items: center;

    &-box {
      margin-right: auto;

      display: flex;
      flex-direction: column;
    }

    &-name {
      font-size: 1.1rem;
      font-weight: 600;
      text-transform: uppercase;
      margin-bottom: 0.4rem;
    }

    &-data {
      font-size: 1rem;
      color: var(--color-grey-dark-3);
    }
  }

  &-rating {
    font-size: 2.2rem;
    color: var(--color-primary);
    font-weight: 300;
  }

  &::before {
    content: "\201C";

    position: absolute;
    top: -2.75rem;
    left: 2rem;
    line-height: 1; // to get rid of spacing cause by the font size
    font-size: 20rem;
    color: var(--color-grey-light-2);

    font-family: sans-serif;
    z-index: 1; //(1994)
  }
}

////////////////////////////////////////////
//// CALL TO ACTION
.cta {
  padding: 3.5rem 0;
  text-align: center; // will center the h2 & the button

  &_book-now {
    font-weight: 2rem;
    font-weight: 300;
    margin-bottom: 2.5rem;
    text-transform: uppercase;
  }
}

////////////////////////////////////////////
//// BUTTON
.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 10rem;
  border: none;
  background-image: linear-gradient(
    to right,
    var(--color-primary),
    var(--color-primary-dark)
  );
  color: #fff;
  cursor: pointer;

  position: relative;

  &_visible {
    display: inline-block; // span is inline so, we change it in order to be able to use padding (top/bottom)
    padding: 2rem 7.5rem;

    transition: transform 0.4s;
  }

  &_invisible {
    display: inline-block; // span is inline so, we change it in order to be able to use padding (top/bottom)
    padding: 2rem 4rem;
    position: absolute;
    // height: 100%; // jonas said so that it gets the same height and width of parent, not sure why, but it works without them
    // width: 100%;
    left: 0; // cuz the span is coming second, means on front of the visible span, 0 means we get it from the start of parent element
    top: -100%;

    opacity: 0; // jonas made it overflow: hidden // it is better
    transition: transform 0.4s;
  }

  &:hover &_visible {
    opacity: 0;
    transform: translateY(100%);
  }

  &:hover &_invisible {
    opacity: 1; // overflow: visible
    transform: translateY(
      100%
    ); // jonas made it top: 0 // cuz it is already absoluted positioned
  }

  &:hover {
    background-image: linear-gradient(
      to left,
      var(--color-primary),
      var(--color-primary-dark)
    );
  }

  &:focus {
    // when clicked once
    outline: none;
    animation: pulsate 1s infinite;
  }
}
